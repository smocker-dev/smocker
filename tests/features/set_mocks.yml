name: Set mocks into smocker
version: "2"
testcases:
  - name: AddBasicMock
    steps:
      - type: http
        method: POST
        url: http://localhost:8081/mocks?reset=true
        headers:
          Content-Type: "application/x-yaml"
        bodyFile: ../data/basic_mock.yml
        assertions:
          - result.statuscode ShouldEqual 200
          - result.bodyjson.message ShouldEqual "Mocks registered successfully"

      - type: http
        method: GET
        url: http://localhost:8081/mocks
        assertions:
          - result.statuscode ShouldEqual 200
          - result.bodyjson.__len__ ShouldEqual 1
          - result.bodyjson.bodyjson0.request.method.matcher ShouldEqual ShouldMatch
          - result.bodyjson.bodyjson0.request.method.value ShouldEqual .*
        vars:
          mock_id:
            from: result.bodyjson.bodyjson0.state.id

      - type: http
        method: GET
        url: http://localhost:8081/mocks?id={{.AddBasicMock.mock_id}}
        assertions:
          - result.statuscode ShouldEqual 200
          - result.bodyjson.__len__ ShouldEqual 1
          - result.bodyjson.bodyjson0.state.id ShouldEqual {{.AddBasicMock.mock_id}}

  - name: Add basic mock list
    steps:
      - type: http
        method: POST
        url: http://localhost:8081/mocks?reset=true
        headers:
          Content-Type: "application/x-yaml"
        bodyFile: ../data/basic_mock_list.yml
        assertions:
          - result.statuscode ShouldEqual 200
          - result.bodyjson.message ShouldEqual "Mocks registered successfully"

      - type: http
        method: GET
        url: http://localhost:8081/mocks
        assertions:
          - result.statuscode ShouldEqual 200
          - result.bodyjson.__len__ ShouldEqual 7

          # Mocks are stored as a stack
          - result.bodyjson.bodyjson5.request.method.value ShouldEqual .*
          - result.bodyjson.bodyjson4.request.method.value ShouldEqual POST
          - result.bodyjson.bodyjson3.request.method.value ShouldEqual DELETE
          - result.bodyjson.bodyjson2.request.method.value ShouldEqual .*
          - result.bodyjson.bodyjson1.request.method.value ShouldEqual .*
          - result.bodyjson.bodyjson0.request.headers.x-custom-header-1.x-custom-header-10.value ShouldEqual bar

  - name: Add basic mock with reset after a basic mock list
    steps:
      - type: http
        method: POST
        url: http://localhost:8081/mocks?reset=true
        bodyFile: ../data/basic_mock_list.yml
        assertions:
          - result.statuscode ShouldEqual 200

      - type: http
        method: GET
        url: http://localhost:8081/mocks
        assertions:
          - result.bodyjson.__len__ ShouldEqual 7

      - type: http
        method: POST
        url: http://localhost:8081/mocks?reset=true
        bodyFile: ../data/basic_mock.yml
        assertions:
          - result.statuscode ShouldEqual 200

      - type: http
        method: GET
        url: http://localhost:8081/mocks
        assertions:
          - result.bodyjson.__len__ ShouldEqual 1

  - name: Add mocks with matchers
    steps:
      - type: http
        method: POST
        url: http://localhost:8081/mocks?reset=true
        headers:
          Content-Type: "application/x-yaml"
        bodyFile: ../data/matcher_mock_list.yml
        assertions:
          - result.statuscode ShouldEqual 200
          - result.bodyjson.message ShouldEqual "Mocks registered successfully"

      - type: http
        method: GET
        url: http://localhost:8081/mocks
        assertions:
          - result.statuscode ShouldEqual 200
          - result.bodyjson.__len__ ShouldEqual 12
          - result.bodyjson.bodyjson0.request.body.matcher ShouldEqual ShouldNotEqualUnorderedJSON
          - result.bodyjson.bodyjson1.request.body.matcher ShouldEqual ShouldEqualUnorderedJSON
          - result.bodyjson.bodyjson2.request.body.matcher ShouldEqual ShouldNotEqualJSON
          - result.bodyjson.bodyjson3.request.body.key1[0].value ShouldEqual test
          - result.bodyjson.bodyjson4.request.body.key1.value ShouldEqual test
          - result.bodyjson.bodyjson5.request.query_params.test.test0.value ShouldEqual true
          - result.bodyjson.bodyjson6.request.body.matcher ShouldEqual "ShouldNotBeEmpty"
          - result.bodyjson.bodyjson7.request.query_params.test.test0.value ShouldEqual true
          - result.bodyjson.bodyjson8.request.headers.content-type.content-type0.matcher ShouldEqual "ShouldMatch"
          - result.bodyjson.bodyjson8.request.headers.content-type.content-type0.value ShouldEqual application/.*
          - result.bodyjson.bodyjson9.request.body.matcher ShouldEqual "ShouldEqualJSON"
          - result.bodyjson.bodyjson9.request.body.value ShouldContainSubstring id
          - result.bodyjson.bodyjson10.request.method.matcher ShouldEqual "ShouldContainSubstring"
          - result.bodyjson.bodyjson10.request.method.value ShouldEqual "PO"
          - result.bodyjson.bodyjson11.request.path.matcher ShouldEqual "ShouldMatch"
          - result.bodyjson.bodyjson11.request.path.value ShouldEqual "/.*"

  - name: Add dynamic mocks
    steps:
      - type: http
        method: POST
        url: http://localhost:8081/mocks?reset=true
        headers:
          Content-Type: "application/x-yaml"
        bodyFile: ../data/dynamic_mock_list.yml
        assertions:
          - result.statuscode ShouldEqual 200
          - result.bodyjson.message ShouldEqual "Mocks registered successfully"

      - type: http
        method: GET
        url: http://localhost:8081/mocks
        assertions:
          - result.statuscode ShouldEqual 200
          - result.bodyjson.__len__ ShouldEqual 6
          - result.bodyjson.bodyjson5.dynamic_response.engine ShouldEqual lua
          - result.bodyjson.bodyjson4.dynamic_response.engine ShouldEqual lua
          - result.bodyjson.bodyjson3.dynamic_response.engine ShouldEqual go_template
          - result.bodyjson.bodyjson2.dynamic_response.engine ShouldEqual go_template_yaml
          - result.bodyjson.bodyjson1.dynamic_response.engine ShouldEqual go_template_json
          - result.bodyjson.bodyjson0.dynamic_response.engine ShouldEqual go_template_json

  - name: Add proxy mocks
    steps:
      - type: http
        method: POST
        url: http://localhost:8081/mocks?reset=true
        headers:
          Content-Type: "application/x-yaml"
        bodyFile: ../data/proxy_mock_list.yml
        assertions:
          - result.statuscode ShouldEqual 200
          - result.bodyjson.message ShouldEqual "Mocks registered successfully"

      - type: http
        method: GET
        url: http://localhost:8081/mocks
        assertions:
          - result.statuscode ShouldEqual 200
          - result.bodyjson.__len__ ShouldEqual 9
          - result.bodyjson.bodyjson8.proxy.host ShouldEqual https://jsonplaceholder.typicode.com
          - result.bodyjson.bodyjson7.proxy.host ShouldEqual https://jsonplaceholder.typicode.com
          - result.bodyjson.bodyjson6.proxy.host ShouldEqual https://httpbin.org
          - result.bodyjson.bodyjson5.proxy.host ShouldEqual https://httpbin.org
          - result.bodyjson.bodyjson4.proxy.host ShouldEqual https://httpbin.org
          - result.bodyjson.bodyjson3.proxy.host ShouldEqual https://httpbin.org
          - result.bodyjson.bodyjson2.proxy.host ShouldEqual https://httpbin.org
          - result.bodyjson.bodyjson1.proxy.host ShouldEqual https://self-signed.badssl.com
          - result.bodyjson.bodyjson0.proxy.host ShouldEqual https://self-signed.badssl.com
